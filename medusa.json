{
    "fuzzing": {
      "workers": 3,
      "workerResetLimit": 50,
      "timeout": 0,
      "testLimit": 0,
      "shrinkLimit": 100,
      "callSequenceLength": 100,
      "corpusDirectory": "medusa-corpus",
      "coverageEnabled": true,
      "deploymentOrder": [
        "Fuzz"
      ],
      "targetContracts": [
        "Fuzz"
      ],
      "targetContractsBalances": [
        "0x27b46536c66c8e3000000"
      ],
      "constructorArgs": {},
      "deployerAddress": "0x30000",
      "senderAddresses": [
        "0x10000",
        "0x20000",
        "0x30000"
      ],
      "blockNumberDelayMax": 60480,
      "blockTimestampDelayMax": 604800,
      "blockGasLimit": 1250000000,
      "transactionGasLimit": 125000000,
      "testing": {
        "stopOnFailedTest": false,
        "stopOnFailedContractMatching": false,
        "stopOnNoTests": true,
        "testAllContracts": false,
        "traceAll": false,
        "assertionTesting": {
          "enabled": true,
          "testViewMethods": true,
          "panicCodeConfig": {
            "failOnCompilerInsertedPanic": true,
            "failOnAssertion": true,
            "failOnArithmeticUnderflow": false,
            "failOnDivideByZero": true,
            "failOnEnumTypeConversionOutOfBounds": false,
            "failOnIncorrectStorageAccess": false,
            "failOnPopEmptyArray": false,
            "failOnOutOfBoundsArrayAccess": false,
            "failOnAllocateTooMuchMemory": false,
            "failOnCallUninitializedVariable": false
          }
        },
        "propertyTesting": {
          "enabled": true,
          "testPrefixes": [
            "crytic_"
          ]
        },
        "optimizationTesting": {
          "enabled": false,
          "testPrefixes": [
            "optimize_"
          ]
        }
      },
      "chainConfig": {
        "codeSizeCheckDisabled": true,
        "cheatCodes": {
          "cheatCodesEnabled": true,
          "enableFFI": false
        }
      }
    },
    "compilation": {
      "platform": "crytic-compile",
      "platformConfig": {
        "target": "test/fuzzing/Fuzz.sol",
        "solcVersion": "",
        "exportDirectory": "",
        "args": ["--foundry-compile-all"]
      }
    },
    "logging": {
      "level": "info",
      "logDirectory": ""
    }
  }